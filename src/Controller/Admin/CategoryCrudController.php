<?php

namespace App\Controller\Admin;

use App\Entity\Category;
use App\Entity\User;
use Doctrine\ORM\EntityManagerInterface;
use EasyCorp\Bundle\EasyAdminBundle\Config\Action;
use EasyCorp\Bundle\EasyAdminBundle\Config\Actions;
use EasyCorp\Bundle\EasyAdminBundle\Controller\AbstractCrudController;
use EasyCorp\Bundle\EasyAdminBundle\Field\AssociationField;
use EasyCorp\Bundle\EasyAdminBundle\Field\IdField;
use EasyCorp\Bundle\EasyAdminBundle\Field\TextEditorField;
use EasyCorp\Bundle\EasyAdminBundle\Field\TextField;

class CategoryCrudController extends AbstractCrudController
{
    public static function getEntityFqcn(): string
    {
        return Category::class;
    }

    public function configureActions(Actions $actions): Actions
    {
        return parent::configureActions($actions)
            ->update('index', 'new', function (Action $action) {
                return $action
                    ->setLabel('Nouvelle Catégorie')
                    ->setIcon('fas fa-tag')
                    ->setCssClass('text-capitalize');
            })
            ->update('index', Action::EDIT, function (Action $action) {
                return $action
                    ->setLabel('Modifier')
                    ->setIcon('far fa-edit')
                    ->setCssClass('text-capitalize');
            })
            ->update('index', Action::DELETE, function (Action $action) {
                return $action
                    ->setLabel('Supprimer')
                    ->setIcon('fas fa-trash-alt')
                    ->setCssClass('text-capitalize');
            })
            ->update('new', Action::SAVE_AND_RETURN, function (Action $action) {
                return $action
                    ->setLabel('Sauvegarder')
                    ->setIcon('fas fa-save')
                    ->setCssClass('text-capitalize');
            })
            ->update('new', Action::SAVE_AND_ADD_ANOTHER, function (Action $action) {
                return $action
                    ->setLabel('Sauvegarder et Ajouter')
                    ->setIcon('fas fa-save')
                    ->setCssClass('text-capitalize');
            });
    }

    public function configureFields(string $pageName): iterable
    {
        return [
            TextField::new('title', 'Titre'),
            TextField::new('slug', 'Slug')->onlyOnIndex(),
            TextField::new('Author', 'Ajouté Par')->onlyOnIndex()
        ];
    }

    public function persistEntity(EntityManagerInterface $entityManager, $entityInstance): void
    {
        if (!$entityInstance instanceof Category) return;
        $entityInstance
            ->setCreatedAt(new \DateTimeImmutable())
            ->setAuthor($this->getUser());
        parent::persistEntity($entityManager, $entityInstance); // TODO: Change the autogenerated stub
    }

    public function updateEntity(EntityManagerInterface $entityManager, $entityInstance): void
    {
        if (!$entityInstance instanceof Category) return;
        $entityInstance
            ->setAuthor($this->getUser());
        parent::updateEntity($entityManager, $entityInstance); // TODO: Change the autogenerated stub
    }
}
